
decode:     formato de ficheiro elf32-i386


Desmontagem da secção .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 37 01 00 00       	call   1140 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
    100f:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Desmontagem da secção .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <printf@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <fclose@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

00001050 <fopen64@plt>:
    1050:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1056:	68 10 00 00 00       	push   $0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

00001060 <puts@plt>:
    1060:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1066:	68 18 00 00 00       	push   $0x18
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

00001070 <strerror@plt>:
    1070:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    1076:	68 20 00 00 00       	push   $0x20
    107b:	e9 a0 ff ff ff       	jmp    1020 <.plt>

00001080 <exit@plt>:
    1080:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    1086:	68 28 00 00 00       	push   $0x28
    108b:	e9 90 ff ff ff       	jmp    1020 <.plt>

00001090 <__libc_start_main@plt>:
    1090:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
    1096:	68 30 00 00 00       	push   $0x30
    109b:	e9 80 ff ff ff       	jmp    1020 <.plt>

000010a0 <fprintf@plt>:
    10a0:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
    10a6:	68 38 00 00 00       	push   $0x38
    10ab:	e9 70 ff ff ff       	jmp    1020 <.plt>

000010b0 <getopt@plt>:
    10b0:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
    10b6:	68 40 00 00 00       	push   $0x40
    10bb:	e9 60 ff ff ff       	jmp    1020 <.plt>

000010c0 <__errno_location@plt>:
    10c0:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
    10c6:	68 48 00 00 00       	push   $0x48
    10cb:	e9 50 ff ff ff       	jmp    1020 <.plt>

000010d0 <cypher@plt>:
    10d0:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
    10d6:	68 50 00 00 00       	push   $0x50
    10db:	e9 40 ff ff ff       	jmp    1020 <.plt>

000010e0 <fputs@plt>:
    10e0:	ff a3 38 00 00 00    	jmp    *0x38(%ebx)
    10e6:	68 58 00 00 00       	push   $0x58
    10eb:	e9 30 ff ff ff       	jmp    1020 <.plt>

Desmontagem da secção .plt.got:

000010f0 <__cxa_finalize@plt>:
    10f0:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
    10f6:	66 90                	xchg   %ax,%ax

Desmontagem da secção .text:

00001100 <_start>:
    1100:	31 ed                	xor    %ebp,%ebp
    1102:	5e                   	pop    %esi
    1103:	89 e1                	mov    %esp,%ecx
    1105:	83 e4 f0             	and    $0xfffffff0,%esp
    1108:	50                   	push   %eax
    1109:	54                   	push   %esp
    110a:	52                   	push   %edx
    110b:	e8 22 00 00 00       	call   1132 <_start+0x32>
    1110:	81 c3 f0 2e 00 00    	add    $0x2ef0,%ebx
    1116:	8d 83 e0 d4 ff ff    	lea    -0x2b20(%ebx),%eax
    111c:	50                   	push   %eax
    111d:	8d 83 80 d4 ff ff    	lea    -0x2b80(%ebx),%eax
    1123:	50                   	push   %eax
    1124:	51                   	push   %ecx
    1125:	56                   	push   %esi
    1126:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)
    112c:	e8 5f ff ff ff       	call   1090 <__libc_start_main@plt>
    1131:	f4                   	hlt    
    1132:	8b 1c 24             	mov    (%esp),%ebx
    1135:	c3                   	ret    
    1136:	66 90                	xchg   %ax,%ax
    1138:	66 90                	xchg   %ax,%ax
    113a:	66 90                	xchg   %ax,%ax
    113c:	66 90                	xchg   %ax,%ax
    113e:	66 90                	xchg   %ax,%ax

00001140 <__x86.get_pc_thunk.bx>:
    1140:	8b 1c 24             	mov    (%esp),%ebx
    1143:	c3                   	ret    
    1144:	66 90                	xchg   %ax,%ax
    1146:	66 90                	xchg   %ax,%ax
    1148:	66 90                	xchg   %ax,%ax
    114a:	66 90                	xchg   %ax,%ax
    114c:	66 90                	xchg   %ax,%ax
    114e:	66 90                	xchg   %ax,%ax

00001150 <deregister_tm_clones>:
    1150:	e8 e0 00 00 00       	call   1235 <__x86.get_pc_thunk.dx>
    1155:	81 c2 ab 2e 00 00    	add    $0x2eab,%edx
    115b:	8d 8a 84 01 00 00    	lea    0x184(%edx),%ecx
    1161:	8d 82 84 01 00 00    	lea    0x184(%edx),%eax
    1167:	39 c8                	cmp    %ecx,%eax
    1169:	74 1d                	je     1188 <deregister_tm_clones+0x38>
    116b:	8b 82 ec ff ff ff    	mov    -0x14(%edx),%eax
    1171:	85 c0                	test   %eax,%eax
    1173:	74 13                	je     1188 <deregister_tm_clones+0x38>
    1175:	55                   	push   %ebp
    1176:	89 e5                	mov    %esp,%ebp
    1178:	83 ec 14             	sub    $0x14,%esp
    117b:	51                   	push   %ecx
    117c:	ff d0                	call   *%eax
    117e:	83 c4 10             	add    $0x10,%esp
    1181:	c9                   	leave  
    1182:	c3                   	ret    
    1183:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1187:	90                   	nop
    1188:	c3                   	ret    
    1189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001190 <register_tm_clones>:
    1190:	e8 a0 00 00 00       	call   1235 <__x86.get_pc_thunk.dx>
    1195:	81 c2 6b 2e 00 00    	add    $0x2e6b,%edx
    119b:	55                   	push   %ebp
    119c:	89 e5                	mov    %esp,%ebp
    119e:	53                   	push   %ebx
    119f:	8d 8a 84 01 00 00    	lea    0x184(%edx),%ecx
    11a5:	8d 82 84 01 00 00    	lea    0x184(%edx),%eax
    11ab:	83 ec 04             	sub    $0x4,%esp
    11ae:	29 c8                	sub    %ecx,%eax
    11b0:	c1 f8 02             	sar    $0x2,%eax
    11b3:	89 c3                	mov    %eax,%ebx
    11b5:	c1 eb 1f             	shr    $0x1f,%ebx
    11b8:	01 d8                	add    %ebx,%eax
    11ba:	d1 f8                	sar    %eax
    11bc:	74 14                	je     11d2 <register_tm_clones+0x42>
    11be:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
    11c4:	85 d2                	test   %edx,%edx
    11c6:	74 0a                	je     11d2 <register_tm_clones+0x42>
    11c8:	83 ec 08             	sub    $0x8,%esp
    11cb:	50                   	push   %eax
    11cc:	51                   	push   %ecx
    11cd:	ff d2                	call   *%edx
    11cf:	83 c4 10             	add    $0x10,%esp
    11d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11d5:	c9                   	leave  
    11d6:	c3                   	ret    
    11d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    11de:	66 90                	xchg   %ax,%ax

000011e0 <__do_global_dtors_aux>:
    11e0:	55                   	push   %ebp
    11e1:	89 e5                	mov    %esp,%ebp
    11e3:	53                   	push   %ebx
    11e4:	e8 57 ff ff ff       	call   1140 <__x86.get_pc_thunk.bx>
    11e9:	81 c3 17 2e 00 00    	add    $0x2e17,%ebx
    11ef:	83 ec 04             	sub    $0x4,%esp
    11f2:	80 bb cc 01 00 00 00 	cmpb   $0x0,0x1cc(%ebx)
    11f9:	75 27                	jne    1222 <__do_global_dtors_aux+0x42>
    11fb:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
    1201:	85 c0                	test   %eax,%eax
    1203:	74 11                	je     1216 <__do_global_dtors_aux+0x36>
    1205:	83 ec 0c             	sub    $0xc,%esp
    1208:	ff b3 44 00 00 00    	pushl  0x44(%ebx)
    120e:	e8 dd fe ff ff       	call   10f0 <__cxa_finalize@plt>
    1213:	83 c4 10             	add    $0x10,%esp
    1216:	e8 35 ff ff ff       	call   1150 <deregister_tm_clones>
    121b:	c6 83 cc 01 00 00 01 	movb   $0x1,0x1cc(%ebx)
    1222:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1225:	c9                   	leave  
    1226:	c3                   	ret    
    1227:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    122e:	66 90                	xchg   %ax,%ax

00001230 <frame_dummy>:
    1230:	e9 5b ff ff ff       	jmp    1190 <register_tm_clones>

00001235 <__x86.get_pc_thunk.dx>:
    1235:	8b 14 24             	mov    (%esp),%edx
    1238:	c3                   	ret    

00001239 <main>:
    1239:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    123d:	83 e4 f0             	and    $0xfffffff0,%esp
    1240:	ff 71 fc             	pushl  -0x4(%ecx)
    1243:	55                   	push   %ebp
    1244:	89 e5                	mov    %esp,%ebp
    1246:	53                   	push   %ebx
    1247:	51                   	push   %ecx
    1248:	83 ec 20             	sub    $0x20,%esp
    124b:	89 cb                	mov    %ecx,%ebx
    124d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    1254:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    125b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    1262:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    1269:	e8 fe 01 00 00       	call   146c <unlock>
    126e:	e9 89 00 00 00       	jmp    12fc <main+0xc3>
    1273:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1276:	83 e8 64             	sub    $0x64,%eax
    1279:	83 f8 12             	cmp    $0x12,%eax
    127c:	77 5e                	ja     12dc <main+0xa3>
    127e:	8b 04 85 38 20 00 00 	mov    0x2038(,%eax,4),%eax
    1285:	ff e0                	jmp    *%eax
    1287:	83 ec 08             	sub    $0x8,%esp
    128a:	68 60 40 00 00       	push   $0x4060
    128f:	68 08 20 00 00       	push   $0x2008
    1294:	e8 fc ff ff ff       	call   1295 <main+0x5c>
    1299:	83 c4 10             	add    $0x10,%esp
    129c:	83 ec 0c             	sub    $0xc,%esp
    129f:	6a 00                	push   $0x0
    12a1:	e8 fc ff ff ff       	call   12a2 <main+0x69>
    12a6:	83 ec 0c             	sub    $0xc,%esp
    12a9:	68 0b 20 00 00       	push   $0x200b
    12ae:	e8 fc ff ff ff       	call   12af <main+0x76>
    12b3:	83 c4 10             	add    $0x10,%esp
    12b6:	83 ec 0c             	sub    $0xc,%esp
    12b9:	6a 00                	push   $0x0
    12bb:	e8 fc ff ff ff       	call   12bc <main+0x83>
    12c0:	a1 00 00 00 00       	mov    0x0,%eax
    12c5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    12c8:	eb 32                	jmp    12fc <main+0xc3>
    12ca:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    12d1:	eb 29                	jmp    12fc <main+0xc3>
    12d3:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
    12da:	eb 20                	jmp    12fc <main+0xc3>
    12dc:	a1 00 00 00 00       	mov    0x0,%eax
    12e1:	83 ec 08             	sub    $0x8,%esp
    12e4:	50                   	push   %eax
    12e5:	68 60 40 00 00       	push   $0x4060
    12ea:	e8 fc ff ff ff       	call   12eb <main+0xb2>
    12ef:	83 c4 10             	add    $0x10,%esp
    12f2:	83 ec 0c             	sub    $0xc,%esp
    12f5:	6a 01                	push   $0x1
    12f7:	e8 fc ff ff ff       	call   12f8 <main+0xbf>
    12fc:	83 ec 04             	sub    $0x4,%esp
    12ff:	68 18 20 00 00       	push   $0x2018
    1304:	ff 73 04             	pushl  0x4(%ebx)
    1307:	ff 33                	pushl  (%ebx)
    1309:	e8 fc ff ff ff       	call   130a <main+0xd1>
    130e:	83 c4 10             	add    $0x10,%esp
    1311:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1314:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
    1318:	0f 85 55 ff ff ff    	jne    1273 <main+0x3a>
    131e:	a1 00 00 00 00       	mov    0x0,%eax
    1323:	89 45 e8             	mov    %eax,-0x18(%ebp)
    1326:	a1 00 00 00 00       	mov    0x0,%eax
    132b:	39 03                	cmp    %eax,(%ebx)
    132d:	7e 69                	jle    1398 <main+0x15f>
    132f:	a1 00 00 00 00       	mov    0x0,%eax
    1334:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    133b:	8b 43 04             	mov    0x4(%ebx),%eax
    133e:	01 d0                	add    %edx,%eax
    1340:	8b 00                	mov    (%eax),%eax
    1342:	83 ec 08             	sub    $0x8,%esp
    1345:	68 1f 20 00 00       	push   $0x201f
    134a:	50                   	push   %eax
    134b:	e8 fc ff ff ff       	call   134c <main+0x113>
    1350:	83 c4 10             	add    $0x10,%esp
    1353:	89 45 e8             	mov    %eax,-0x18(%ebp)
    1356:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
    135a:	75 3c                	jne    1398 <main+0x15f>
    135c:	e8 fc ff ff ff       	call   135d <main+0x124>
    1361:	8b 00                	mov    (%eax),%eax
    1363:	83 ec 0c             	sub    $0xc,%esp
    1366:	50                   	push   %eax
    1367:	e8 fc ff ff ff       	call   1368 <main+0x12f>
    136c:	83 c4 10             	add    $0x10,%esp
    136f:	8b 15 00 00 00 00    	mov    0x0,%edx
    1375:	83 ec 0c             	sub    $0xc,%esp
    1378:	50                   	push   %eax
    1379:	6a 54                	push   $0x54
    137b:	68 21 20 00 00       	push   $0x2021
    1380:	68 28 20 00 00       	push   $0x2028
    1385:	52                   	push   %edx
    1386:	e8 fc ff ff ff       	call   1387 <main+0x14e>
    138b:	83 c4 20             	add    $0x20,%esp
    138e:	83 ec 0c             	sub    $0xc,%esp
    1391:	6a 01                	push   $0x1
    1393:	e8 fc ff ff ff       	call   1394 <main+0x15b>
    1398:	a1 00 00 00 00       	mov    0x0,%eax
    139d:	89 45 ec             	mov    %eax,-0x14(%ebp)
    13a0:	a1 00 00 00 00       	mov    0x0,%eax
    13a5:	83 c0 01             	add    $0x1,%eax
    13a8:	39 03                	cmp    %eax,(%ebx)
    13aa:	7e 6c                	jle    1418 <main+0x1df>
    13ac:	a1 00 00 00 00       	mov    0x0,%eax
    13b1:	83 c0 01             	add    $0x1,%eax
    13b4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    13bb:	8b 43 04             	mov    0x4(%ebx),%eax
    13be:	01 d0                	add    %edx,%eax
    13c0:	8b 00                	mov    (%eax),%eax
    13c2:	83 ec 08             	sub    $0x8,%esp
    13c5:	68 36 20 00 00       	push   $0x2036
    13ca:	50                   	push   %eax
    13cb:	e8 fc ff ff ff       	call   13cc <main+0x193>
    13d0:	83 c4 10             	add    $0x10,%esp
    13d3:	89 45 ec             	mov    %eax,-0x14(%ebp)
    13d6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
    13da:	75 3c                	jne    1418 <main+0x1df>
    13dc:	e8 fc ff ff ff       	call   13dd <main+0x1a4>
    13e1:	8b 00                	mov    (%eax),%eax
    13e3:	83 ec 0c             	sub    $0xc,%esp
    13e6:	50                   	push   %eax
    13e7:	e8 fc ff ff ff       	call   13e8 <main+0x1af>
    13ec:	83 c4 10             	add    $0x10,%esp
    13ef:	8b 15 00 00 00 00    	mov    0x0,%edx
    13f5:	83 ec 0c             	sub    $0xc,%esp
    13f8:	50                   	push   %eax
    13f9:	6a 5d                	push   $0x5d
    13fb:	68 21 20 00 00       	push   $0x2021
    1400:	68 28 20 00 00       	push   $0x2028
    1405:	52                   	push   %edx
    1406:	e8 fc ff ff ff       	call   1407 <main+0x1ce>
    140b:	83 c4 20             	add    $0x20,%esp
    140e:	83 ec 0c             	sub    $0xc,%esp
    1411:	6a 01                	push   $0x1
    1413:	e8 fc ff ff ff       	call   1414 <main+0x1db>
    1418:	8b 45 f0             	mov    -0x10(%ebp),%eax
    141b:	50                   	push   %eax
    141c:	ff 75 e4             	pushl  -0x1c(%ebp)
    141f:	ff 75 ec             	pushl  -0x14(%ebp)
    1422:	ff 75 e8             	pushl  -0x18(%ebp)
    1425:	e8 fc ff ff ff       	call   1426 <main+0x1ed>
    142a:	83 c4 10             	add    $0x10,%esp
    142d:	a1 00 00 00 00       	mov    0x0,%eax
    1432:	39 45 e8             	cmp    %eax,-0x18(%ebp)
    1435:	74 0e                	je     1445 <main+0x20c>
    1437:	83 ec 0c             	sub    $0xc,%esp
    143a:	ff 75 e8             	pushl  -0x18(%ebp)
    143d:	e8 fc ff ff ff       	call   143e <main+0x205>
    1442:	83 c4 10             	add    $0x10,%esp
    1445:	a1 00 00 00 00       	mov    0x0,%eax
    144a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
    144d:	74 0e                	je     145d <main+0x224>
    144f:	83 ec 0c             	sub    $0xc,%esp
    1452:	ff 75 ec             	pushl  -0x14(%ebp)
    1455:	e8 fc ff ff ff       	call   1456 <main+0x21d>
    145a:	83 c4 10             	add    $0x10,%esp
    145d:	b8 00 00 00 00       	mov    $0x0,%eax
    1462:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1465:	59                   	pop    %ecx
    1466:	5b                   	pop    %ebx
    1467:	5d                   	pop    %ebp
    1468:	8d 61 fc             	lea    -0x4(%ecx),%esp
    146b:	c3                   	ret    

0000146c <unlock>:
    146c:	55                   	push   %ebp
    146d:	89 e5                	mov    %esp,%ebp
    146f:	e8 08 00 00 00       	call   147c <__x86.get_pc_thunk.ax>
    1474:	05 8c 2b 00 00       	add    $0x2b8c,%eax
    1479:	90                   	nop
    147a:	5d                   	pop    %ebp
    147b:	c3                   	ret    

0000147c <__x86.get_pc_thunk.ax>:
    147c:	8b 04 24             	mov    (%esp),%eax
    147f:	c3                   	ret    

00001480 <__libc_csu_init>:
    1480:	55                   	push   %ebp
    1481:	57                   	push   %edi
    1482:	56                   	push   %esi
    1483:	53                   	push   %ebx
    1484:	e8 b7 fc ff ff       	call   1140 <__x86.get_pc_thunk.bx>
    1489:	81 c3 77 2b 00 00    	add    $0x2b77,%ebx
    148f:	83 ec 0c             	sub    $0xc,%esp
    1492:	8b 6c 24 28          	mov    0x28(%esp),%ebp
    1496:	e8 65 fb ff ff       	call   1000 <_init>
    149b:	8d b3 d8 fe ff ff    	lea    -0x128(%ebx),%esi
    14a1:	8d 83 d4 fe ff ff    	lea    -0x12c(%ebx),%eax
    14a7:	29 c6                	sub    %eax,%esi
    14a9:	c1 fe 02             	sar    $0x2,%esi
    14ac:	74 1f                	je     14cd <__libc_csu_init+0x4d>
    14ae:	31 ff                	xor    %edi,%edi
    14b0:	83 ec 04             	sub    $0x4,%esp
    14b3:	55                   	push   %ebp
    14b4:	ff 74 24 2c          	pushl  0x2c(%esp)
    14b8:	ff 74 24 2c          	pushl  0x2c(%esp)
    14bc:	ff 94 bb d4 fe ff ff 	call   *-0x12c(%ebx,%edi,4)
    14c3:	83 c7 01             	add    $0x1,%edi
    14c6:	83 c4 10             	add    $0x10,%esp
    14c9:	39 fe                	cmp    %edi,%esi
    14cb:	75 e3                	jne    14b0 <__libc_csu_init+0x30>
    14cd:	83 c4 0c             	add    $0xc,%esp
    14d0:	5b                   	pop    %ebx
    14d1:	5e                   	pop    %esi
    14d2:	5f                   	pop    %edi
    14d3:	5d                   	pop    %ebp
    14d4:	c3                   	ret    
    14d5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    14dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000014e0 <__libc_csu_fini>:
    14e0:	c3                   	ret    

Desmontagem da secção .fini:

000014e4 <_fini>:
    14e4:	53                   	push   %ebx
    14e5:	83 ec 08             	sub    $0x8,%esp
    14e8:	e8 53 fc ff ff       	call   1140 <__x86.get_pc_thunk.bx>
    14ed:	81 c3 13 2b 00 00    	add    $0x2b13,%ebx
    14f3:	83 c4 08             	add    $0x8,%esp
    14f6:	5b                   	pop    %ebx
    14f7:	c3                   	ret    
